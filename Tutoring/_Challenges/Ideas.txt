'Guess the Number' Game
-----------------------------------------
Computer picks a random number and you have three guesses to guess the number.


Requirements
-------------
    - If you guess high the computer needs to tell you. Same for a low guess.











Is X In List
-----------------------------------------
Given a list and a variable, say whether or not that variable was found in
the list


Requirements
-------------
    - ________













import random
import time

alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',' ']

solution = 'hello world' #end goal
start = '' #starting string
holder = ''# letter holder to pop
i = 0

while start != solution:
    holder = random.choice(alphabet)
    if holder != solution[i]:
        alphabet.remove(holder)
        print(start + holder)
        time.sleep(.05)
    else:
        alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',' ']
        start += holder
        print(start)
        i += 1
        time.sleep(.05)












This keypad randomizes the numbers every time so someone doesn't figure out the password from The hand movements
https://old.reddit.com/r/interestingasfuck/comments/uwkfr0/this_keypad_randomizes_the_numbers_every_time_so/














Slot Machine
-----------------------------------------
Make a slot machine with 3 wheels and 5 different options per wheel.


Requirements
-------------
    - ________











Repeat The Characters
-----------------------------------------
Repeat every character of a string. "123a!" should return "112233aa!!"


Requirements
-------------
    - ________




# saturn = "Joey wears clown shoes!"
# newstring = ""

# for char in saturn:
#     newstring += char + char

# print(newstring)











Space Between Characters
-----------------------------------------
Add a space between every character of a string. "123a!" should return "1 2 3 a !"


Requirements
-------------
    - ________











Text Encryption and Decryption
-----------------------------------------
Build a program that can encrypt and decrypt text using your favorite cipher.


Requirements
-------------
    - ________











Highest Bill Returns
-----------------------------------------
Enter total number of dollars desired and the program will return that total
using the fewest number of individual dollar bills.


Requirements
-------------
    - ________











Mad Libs
-----------------------------------------
My __adjective-1__ __noun-1__ had caught the attention of my neighbor __name-1__ while he was __verb-ing-1__.
__name-1__ said that my __noun-1__ was __adjective-2__.


Requirements
-------------
    - ________











Rock, Paper, Scissors
-----------------------------------------
Play Rock, Paper, Scissors against a computer.


Requirements
-------------
    - ________











Dynamic Random Group Maker
-----------------------------------------
Build randomly generated groups of students from a defined student list and
group size.


Requirements
-------------
    - Collect list of students
    - Have default list of students for testing purposes
    - Collect desired group size
    - Randomly assign students to groups
    - Return built groups list and any students left out











Hangman Game
-----------------------------------------
____________


Requirements
-------------
    - ________











Tic-Tac-Toe
-----------------------------------------
____________


Requirements
-------------
    - ________











Boss Fight
-----------------------------------------
Build your player stats and then fight a randomly generated enemy, original
pokemon battle style.


Requirements
-------------
    - Build your fighters stats
    - Generate a 'random' enemy
    - Choose whether to attack or defend
    - Enemy will attack or defend 'randomly'











Traveling Salesman
-----------------------------------------
You buy and sell goods between towns to make a profit.


Requirements
-------------
    - Generate shops randomly for each town
    - Ability to buy items from shops
    - Ability to sell items to shops
    - End day by ending trading in that town and traveling to the next town
    - Remove set amount of money each time you travel to account for food
      and water needs















available_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
letter_scramble = ""

for i in range(len(available_letters)):
    letter_index = random.randint(0, len(available_letters) - 1)
    chosen_letter = available_letters[letter_index]
    letter_scramble += chosen_letter
    available_letters = available_letters.replace(chosen_letter, "")

print(letter_scramble)